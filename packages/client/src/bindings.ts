// DO NOT MODIFY. This file was generated by Specta and is used to keep rspc internally type safe.
// Checkout the unit test 'export_internal_types' to see where this files comes from!

/**
 * TODO
 * 
 * @internal
 */
export type RequestId = null | number | string

/**
 * TODO
 * 
 * @internal
 */
export type Request = ({ method: "query"; params: { path: string; input: any | null } } | { method: "mutation"; params: { path: string; input: any | null } } | { method: "subscription"; params: { path: string; input: [RequestId, any | null] } } | { method: "subscriptionStop"; params: { input: RequestId } }) & { jsonrpc: string | null; id: RequestId }

/**
 * TODO
 * 
 * @internal
 */
export type RequestInner = { method: "query"; params: { path: string; input: any | null } } | { method: "mutation"; params: { path: string; input: any | null } } | { method: "subscription"; params: { path: string; input: [RequestId, any | null] } } | { method: "subscriptionStop"; params: { input: RequestId } }

/**
 * Represents a Typescript procedure file which is generated by the Rust code.
 * This is codegenerated Typescript file is how we can validate the types on the frontend match Rust.
 * 
 * @internal
 */
export type ProcedureDef = { key: string; input: any; result: any }