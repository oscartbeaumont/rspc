[package]
name = "rspc"
description = "A blazing fast and easy to use tRPC server for Rust."
version = "1.0.0-rc.5"
authors = ["Oscar Beaumont <oscar@otbeaumont.me>"]
edition = "2021"
license = "MIT"
include = ["/src", "/LICENCE", "/README.md"]
repository = "https://github.com/oscartbeaumont/rspc"
documentation = "https://docs.rs/rspc/latest/rspc"
keywords = ["async", "specta", "rust-to-ts", "typescript", "typesafe"]
categories = ["web-programming", "asynchronous"]

# /bin/sh RUSTDOCFLAGS="--cfg docsrs" cargo +nightly doc --all-features
[package.metadata."docs.rs"]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[[test]]
name = "tests"
path = "tests/tauri/tauri_test.rs"
harness = false

[[bench]]
name = "benchmarks"
harness = false

[features]
default = ["typescript"]
tauri = ["dep:tauri", "tokio", "tauri/wry", "tauri-specta"]
tracing = ["dep:tracing"]
httpz = ["dep:httpz", "httpz/cookies", "tokio", "tokio/sync"] # TODO: Remove the requirement on tokio
# anyhow = ["dep:anyhow"]
tokio = ["dep:tokio", "specta/tokio"]
typescript = ["specta/typescript", "tauri-specta/typescript"] # TODO: Use this in the actual codebase

unstable = [] # APIs where one line of code can blow up your whole app

# Webservers
axum = ["httpz", "httpz/axum", "httpz/tokio-ws", "httpz/axum"]
# actix-web = ["httpz/actix-web"]
# poem = ["httpz/poem"]
# rocket = ["httpz/rocket"]
# warp = ["httpz/warp"]
# TODO: Following ones are exposed but not officially supported
lambda = ["httpz", "httpz/lambda", "httpz/ws", "httpz/axum"]
workers = ["httpz", "httpz/workers", "httpz/ws"]
vercel = ["httpz", "httpz/vercel", "httpz/ws", "axum"]

[dependencies]
specta = { workspace = true }
serde = { workspace = true }
thiserror = { workspace = true }
futures = { version = "0.3.28", default-features = false }
pin-project-lite = "0.2.10"

# Optional
serde_json = { version = "1", default-features = false }
# TODO: toml, yaml, formdata

httpz = { version = "0.0.5", default-features = false, optional = true }
tauri = { version = "1.4.1", default-features = false, optional = true }
tauri-specta = { git = "https://github.com/oscartbeaumont/tauri-specta", rev = "1073c8da4e4fccbeebfb389b2f093ac711cd35df", default-features = false, optional = true }
tracing = { version = "0.1.37", default-features = false, optional = true }
worker = { version = "0.0.17", default-features = false, optional = true }
# anyhow = { version = "1", default-features = false, optional = true } # TODO: Should we bring this back with the new typed error handling?
tokio = { version = "1", default-features = false, features = ["rt", "time"], optional = true }
streamunordered = "0.5.2"

[dev-dependencies]
# Tests
async-stream = "0.3.5"
tokio = { version = "1.29.1", features = ["macros", "rt-multi-thread"] }
tauri = { version = "1.4.1", features = ["api-all"] }

# Benchmark
criterion = { version = "0.5", features = ["async_tokio", "html_reports"] }
pprof = { version = "0.12.0", features = ["flamegraph", "criterion", "protobuf-codec", "frame-pointer"] }
# rspc_legacy = { package = "rspc", version = "0.1.3" }

[workspace]
members = ["./crates/*", "./examples", "./examples/axum", "./examples/vercel", "./examples/tauri/src-tauri"]

[workspace.dependencies]
specta = { version = "=2.0.0-rc.1", default-features = false, features = ["serde", "serde_json"] }
serde = { version = "1", default-features = false, features = ["derive"] }
thiserror = { version = "1.0.43", default-features = false }

[patch.crates-io]
specta = { git = "https://github.com/oscartbeaumont/specta", rev = "5948d80f2551780eda2c7bf38450fc796c74cfbf" }
