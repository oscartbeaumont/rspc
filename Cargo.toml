[package]
name = "rspc"
description = "A blazing fast and easy to use TRPC server for Rust."
version = "0.1.4"
authors = ["Oscar Beaumont <oscar@otbeaumont.me>"]
edition = "2021"
license = "MIT"
include = ["/src", "/LICENCE", "/README.md"]
repository = "https://github.com/oscartbeaumont/rspc"
documentation = "https://docs.rs/rspc/latest/rspc"
keywords = ["async", "specta", "rust-to-ts", "typescript", "typesafe"]
categories = ["web-programming", "asynchronous"]

# /bin/sh RUSTDOCFLAGS="--cfg docsrs" cargo +nightly doc --all-features
[package.metadata."docs.rs"]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[[test]]
name = "tests"
path = "tests/tauri/tauri_test.rs"
harness = false

[[bench]]
name = "benchmarks"
harness = false

[features]
default = ["typescript"]
tauri = ["dep:tauri", "tokio", "tauri/wry"]
tracing = ["dep:tracing"]
httpz = ["dep:httpz", "httpz/cookies", "tokio", "tokio/sync"] # TODO: Remove the requirement on tokio
anyhow = ["dep:anyhow"]
tokio = ["dep:tokio", "specta/tokio"]
typescript = ["specta/typescript"] # TODO: Use this in the actual codebase

unstable = [] # APIs where one line of code can blow up your whole app

# Webservers
axum = ["httpz", "httpz/axum", "httpz/tokio-ws", "httpz/axum"]
# actix-web = ["httpz/actix-web"]
# poem = ["httpz/poem"]
# rocket = ["httpz/rocket"]
# warp = ["httpz/warp"]
# TODO: Following ones are exposed but not officially supported
lambda = ["httpz", "httpz/lambda", "httpz/ws", "httpz/axum"]
workers = ["httpz", "httpz/workers", "httpz/ws"]
vercel = ["httpz", "httpz/vercel", "httpz/ws", "axum"]

[dependencies]
specta = { version = "1", default-features = false, features = ["serde"] }
serde = { version = "1", default-features = false, features = ["derive"] }
serde_json = { version = "1", default-features = false }
thiserror = { version = "1.0.40", default-features = false } # TODO: Possibly remove and do Specta typesafe errors manully?
futures = { version = "0.3.28", default-features = false }
pin-project = "1.0.12" # TODO: Move to `pin-project-lite`

# Optional
httpz = { version = "0.0.4", default-features = false, optional = true }
tauri = { version = "1.2.4", default-features = false, optional = true }
tracing = { version = "0.1.37", default-features = false, optional = true }
worker = { version = "0.0.15", default-features = false, optional = true }
anyhow = { version = "1", default-features = false, optional = true }
tokio = { version = "1", default-features = false, features = ["rt", "time"], optional = true }
streamunordered = "0.5.2"

[dev-dependencies]
# Tests
async-stream = "0.3.4"
tokio = { version = "1.27.0", features = ["macros", "rt-multi-thread"] }
tauri = { version = "1.2.4", features = ["api-all"] }

# Benchmark
criterion = { version = "0.4", features = ["async_tokio", "html_reports"] }
pprof = { version = "0.11.1", features = ["flamegraph", "criterion", "protobuf-codec", "frame-pointer"] }
rspc_legacy = { package = "rspc", version = "0.1.3"}

[workspace]
members = [
    "./create-rspc-app",
    "./examples",
    "./examples/axum",
    "./examples/vercel",
    "./examples/tauri/src-tauri"
]

[patch.crates-io]
httpz = { git = "https://github.com/oscartbeaumont/httpz", rev = "2afc85de7c05b5d7d9b74c5439baf5a952162b15" } # TODO: Move back to crates.io release
